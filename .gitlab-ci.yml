
stages:
  - configure
  - lint
  - build
  - test
  - documentation
  - release
  - package
  - publish


# Skip rustfmt
.lint:rustfmt:
  stage: lint
  image: claudiomattera/rust-builder:1.41.1
  script:
    - cargo fmt --all -- --check
  allow_failure: true


lint:clippy:
  stage: lint
  image: claudiomattera/rust-builder:1.41.1
  script:
    - cargo clippy --all-targets --all-features
  allow_failure: true


build:cargo:
  stage: build
  image: claudiomattera/rust-builder:1.41.1
  script:
    - cargo build --all-targets --all-features
  artifacts:
    paths:
      - 'target/debug/'
    expire_in: 1 day


test:cargo:
  stage: test
  image: claudiomattera/rust-builder:1.41.1
  script:
    - cargo test
  dependencies:
    - build:cargo


documentation:cargo:
  stage: documentation
  image: claudiomattera/rust-builder:1.41.1
  script:
    - cargo doc --no-deps
  dependencies:
    - build:cargo
  artifacts:
    paths:
      - 'target/doc/'
    expire_in: 1 day


release:cargo:linux:x86_64:
  stage: release
  image: claudiomattera/rust-builder:1.41.1
  only:
    - /^v\d+(\.\d+)*$/
  script:
    - cargo build --release --target=x86_64-unknown-linux-gnu
    - cp "target/x86_64-unknown-linux-gnu/release/${CI_PROJECT_NAME}" "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}-linux-x86_64"
  artifacts:
    paths:
      - "target/x86_64-unknown-linux-gnu/release/${CI_PROJECT_NAME}"
      - "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}-linux-x86_64"
    expire_in: 1 day


release:cargo:linux:raspberry-pi:
  stage: release
  image: claudiomattera/rust-builder:1.41.1
  only:
    - /^v\d+(\.\d+)*$/
  before_script:
    # These are necessary for crate servo-fontconfig-sys
    - export CC=/opt/rpi/tools/arm-bcm2708/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc
    - ln -s /opt/rpi/tools/arm-bcm2708/arm-linux-gnueabihf/bin/arm-linux-gnueabihf-ar /usr/bin/arm-unknown-linux-gnueabihf-ar
  script:
    - cargo build --release --target=arm-unknown-linux-gnueabihf
    - cp "target/arm-unknown-linux-gnueabihf/release/${CI_PROJECT_NAME}" "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}-linux-raspberry-pi"
  artifacts:
    paths:
      - "target/arm-unknown-linux-gnueabihf/release/${CI_PROJECT_NAME}"
      - "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}-linux-raspberry-pi"
    expire_in: 1 day


package:cargo:debian:x86_64:
  stage: package
  image: claudiomattera/rust-builder:1.41.1
  only:
    - /^v\d+(\.\d+)*$/
  dependencies:
    - release:cargo:linux:x86_64
  script:
    - cargo deb --no-build --target=x86_64-unknown-linux-gnu
    - cp "target/x86_64-unknown-linux-gnu/debian/${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_amd64.deb" "${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_amd64.deb"
  artifacts:
    paths:
      - "${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_amd64.deb"
    expire_in: 1 day


package:cargo:debian:raspberry-pi:
  stage: package
  image: claudiomattera/rust-builder:1.41.1
  only:
    - /^v\d+(\.\d+)*$/
  dependencies:
    - release:cargo:linux:raspberry-pi
  script:
    - cargo deb --no-build --target=arm-unknown-linux-gnueabihf
    - cp "target/arm-unknown-linux-gnueabihf/debian/${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_armhf.deb" "${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_armhf.deb"
  artifacts:
    paths:
      - "${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_armhf.deb"
    expire_in: 1 day


publish:gitlab:
  stage: publish
  image: claudiomattera/gitlab-release:0.1.2
  only:
    - /^v\d+(\.\d+)*$/
  script:
    - gitlab-release --name "Version ${CI_COMMIT_TAG:1}"
        "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}-linux-x86_64"
        "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}-linux-raspberry-pi"
        "${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_amd64.deb"
        "${CI_PROJECT_NAME}_${CI_COMMIT_TAG:1}_armhf.deb"
